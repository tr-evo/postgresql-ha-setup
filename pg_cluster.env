# PostgreSQL Cluster Configuration
# Save this file as pg_cluster.env and modify according to your needs
# Usage: source pg_cluster.env && ./postgres_cluster.sh [primary|replica] [replica_number]

###################
# Network Configuration
###################

# IP address of the primary PostgreSQL server
# Required for replica setup
PRIMARY_IP=192.168.1.10

# Comma-separated list of replica IP addresses
# Used by HAProxy for load balancing read queries
REPLICA_IPS=192.168.1.11,192.168.1.12

# Network subnet for pg_hba.conf access control
# Should encompass all your PostgreSQL servers
NETWORK_SUBNET=192.168.1.0/24

###################
# PostgreSQL Configuration
###################

# PostgreSQL version to install
# Supported versions: 12, 13, 14, 15, 16
PG_VERSION=15

# PostgreSQL admin user
# This is the superuser account
PG_USER=postgres

# PostgreSQL admin password
# If not set, a random password will be generated
PG_PASSWORD=your_secure_password

# Replication user name
# This account will be used for streaming replication
REPLICATION_USER=replicator

# Replication user password
# If not set, a random password will be generated
REPLICATION_PASSWORD=your_replication_password

# Instance name for same-server deployments
# Change this when running multiple instances on same server
INSTANCE_NAME=main

# PostgreSQL port
# Default is 5432, change for multiple instances
PG_PORT=5432

# PgBouncer port
# Default is 6432, change for multiple instances
PGBOUNCER_PORT=6432

###################
# Performance Settings
#
# Guidelines
# SHARED_BUFFERS: 25% total system RAM for dedicated, 15-20% for shared servers, never higher than 40% of RAM
# EFFECTIVE_CACHE_SIZE: 75% total system RAM (this is a planner hint, not actual allocation
# MAINTENANCE_WORK_MEM: 10% of system RAM, up to 4GB max (for VACUUM, CREATE INDEX, â€¦)
# WORK_MEM: (Total RAM - shared_buffers) / (max_connections * 3), set conservative (for memory per sort operation/hash table)
# hint: watch pg_stat_bgwriter for buffer behavior, pg_stat_activity for memory-intensive queries
#
###################

# Maximum number of client connections
# Adjust based on your workload and available resources
MAX_CONNECTIONS=200

# Memory configurations will be auto-calculated if not set
# Values should include units (MB or GB)
SHARED_BUFFERS=2GB
EFFECTIVE_CACHE_SIZE=4GB
MAINTENANCE_WORK_MEM=512MB
WORK_MEM=32MB

# WAL (Write-Ahead Log) settings
WAL_KEEP_SIZE=1GB
MIN_WAL_SIZE=1GB
MAX_WAL_SIZE=4GB

###################
# Backup Configuration
###################

# Directory for storing backups
BACKUP_DIR=/var/lib/postgresql/backups

# Backup retention period in days
# Older backups will be automatically removed
BACKUP_RETENTION_DAYS=7

# Time for daily backup
# Format: HH:MM (24-hour)
BACKUP_TIME=01:00

###################
# Monitoring Configuration
###################

# Enable detailed logging
ENABLE_DETAILED_LOGGING=yes

# Enable pg_stat_statements for query analysis
ENABLE_PG_STAT_STATEMENTS=yes

# Enable PostgreSQL explains for slow queries
LOG_MIN_DURATION_STATEMENT=1000

# HAProxy statistics port
HAPROXY_STATS_PORT=7000

###################
# Security Settings
###################

# SSL configuration
ENABLE_SSL=no
SSL_CERT_FILE=/path/to/server.crt
SSL_KEY_FILE=/path/to/server.key

# Client authentication method
# Options: md5, scram-sha-256, cert
CLIENT_AUTH_METHOD=scram-sha-256

###################
# Development Settings
###################

# Enable debug mode for verbose output
# Set to 1 to enable
DEBUG=0

# Allow remote connections
# Set to 'no' for local development
ALLOW_REMOTE_CONNECTIONS=yes

###################
# Advanced Settings
###################

# Synchronous replication
# 'any': Wait for any one replica to confirm writes
# 'off': Don't wait for replicas
# Or specify replica names: 'replica1, replica2'
SYNCHRONOUS_COMMIT=off

# Connection pooling mode
# Options: transaction, session, statement
POOL_MODE=transaction

# Maximum number of client connections for PgBouncer
PGBOUNCER_MAX_CLIENT_CONN=1000

# Default pool size for PgBouncer
PGBOUNCER_DEFAULT_POOL_SIZE=20

# Load balancing method for read replicas
# Options: roundrobin, leastconn
LOAD_BALANCING_METHOD=leastconn